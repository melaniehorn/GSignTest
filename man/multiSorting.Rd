% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiSorting.R
\name{multiSorting}
\alias{multiSorting}
\title{Multidimensional Sorting}
\usage{
multiSorting(data, method = "identity", control = list())
}
\arguments{
\item{data}{[\code{data.frame}]\cr \code{data.frame} where each row consists of one numeric observation.}

\item{method}{[\code{character(1)}]\cr Method for sorting, see Details.}

\item{control}{Further Arguments for the methods, see Details.}
}
\value{
Named list with the entries:
\describe{
  \item{\code{sortedData} [\code{data.frame}]}{The sorted data.}
  \item{\code{inds} [\code{integer}]}{The sorted indices of the rows of the input data.}
}
}
\description{
Performs a multidimensional sorting of a \code{data.frame}.
One can choose between various approachs for the sorting, see the Details.
}
\details{
The following methods for sorting are supported:
\describe{
  \item{\code{"identity"}}{order in the dataset (i.e. the function does no further sorting).}
  \item{\code{"random"}}{a random order.}
  \item{\code{"norm"}}{ordering via a vector-norm.}
  \item{\code{"median"}}{ordering via the median value per observation.}
  \item{\code{"dimSort"}}{sorting the data one-dimensional. Ties are broken by the next dimension and so on.}
  \item{\code{"weightedSum"}}{ordering the data via the value of a weighted sum per observation.}
  \item{\code{"projection"}}{projects the points of the dataset to a line.}
  \item{\code{"nonDomSort"}}{Nondominated-Sorting. Ties can be broken via one of the other methods.}
  \item{\code{"clust"}}{Take the order gotten from a hierarchical clustering by \code{\link[stats]{hclust}}}
  \item{\code{"nn"}}{Nearest-Neighbor-Heuristic.
      Tries to find a shortest path trough the data by always taking the next nearest not-so-far-chosen point.}
  \item{\code{"shp"}}{Computes the Shortest Hamiltonian Path through the data.}
}

The \code{control} argument is a list that can supply any of the following components:
\describe{
  \item{\code{degree} [\code{numeric(1)}]}{For method \code{"norm"}:\cr
    Non-negative (possibly infinity) parameter of a vector-norm. Default: \code{2}.}
  \item{\code{order} [\code{integer}]}{For method \code{"dimSort"}:\cr
    Vector of dimension indices which determine the order of sorting. Default: \code{1:ncol(data)}.}
  \item{\code{weights} [\code{numeric}]}{For method \code{"weightedSum"}:\cr
    Non-negative vector of length \code{ncol(data)} which give the weight for each dimension.
    Default: \code{rep(1, ncol(data))}.}
  \item{\code{vec.pos} [\code{numeric}]}{For method \code{"projection"}:\cr
    Vector of length \code{ncol(data)} which gives the position vector of the line to project on.
    Default: \code{rep(0, ncol(data))}.}
  \item{\code{vec.dir} [\code{numeric}]}{For method \code{"projection"}:\cr
    Vector of length \code{ncol(data)} which gives the direction vector of the line to project on.
    Default: \code{rep(1, ncol(data))}.}
  \item{\code{tie.breaking} [\code{character(1)}]}{For method  \code{"nonDomSort"}:\cr
    A character string determining one of the other methods for tie-breaking of the domination ranks.
    Default: \code{"identity"}. Note, that if the chosen method has control arguments itsself,
    they can/should be also given via \code{control}.}
  \item{\code{clust.method} [\code{character(1)}]}{For method \code{"clust"}:\cr
    The \code{method}-argument of \code{\link[stats]{hclust}}. Default: \code{"complete"}.}
  \item{\code{dist.method} [\code{character(1)}]}{For method \code{"clust"}, \code{"nn"} and \code{"shp"}:\cr
    The \code{method}-argument of \code{\link[stats]{dist}}. Default: \code{"euclidean"}.}
  \item{\code{p} [\code{numeric(1)}]}{For method \code{"clust"}, \code{"nn"} and \code{"shp"}:\cr
    The \code{p}-argument of \code{\link[stats]{dist}}. Default: \code{2}.}
  \item{\code{path} [\code{character(1)}]}{For method \code{"shp"}:\cr
    Path to the executable code of the Concorde solver. Default: The working directory.}
  \item{\code{prec} [\code{numeric(1)}]}{For method \code{"shp"}: \cr
    The precision, i.e. the number of decimal places using for the distances between two points.
    Default: \code{6}}.
}
}
\note{
The code of the Concorde TSP package is not included in this package and has to be obtained separately
from the Concorde web site (see references). Either download the precompiled executables
and place them in a suitable directory and make them executable, or you can get the source code and
compile it on your own. TSP needs to know where the executables are.
}
\examples{
multiSorting(iris[, 1:4], method = "identity")
multiSorting(iris[, 1:4], method = "random")
multiSorting(iris[, 1:4], method = "norm")
multiSorting(iris[, 1:4], method = "median")
multiSorting(iris[, 1:4], method = "dimSort")
multiSorting(iris[, 1:4], method = "weightedSum")
multiSorting(iris[, 1:4], method = "projection")
multiSorting(iris[, 1:4], method = "nonDomSort")
multiSorting(iris[, 1:4], method = "clust")
multiSorting(iris[, 1:4], method = "nn")
\dontrun{multiSorting(iris[, 1:4], method = "shp")}

}
\references{
\itemize{
  \item Concorde home page, \url{http://www.tsp.gatech.edu/concorde/}
  \item Concorde download page, \url{http://www.tsp.gatech.edu/concorde/downloads/downloads.htm}
  \item David Appletgate, Robert Bixby, Vasek Chvatal, William Cook (2001): TSP cuts which do not
        conform to the template paradigm, Computational Combinatorial Optimization, M. Junger and D.
        Naddef (editors), Springer.
}
}
\seealso{
\code{\link{plotMultiSorting}}
}
